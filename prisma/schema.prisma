// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Datos de la empresa
// Campo Clave_acceso: Es un campo que se genera automaticamente al momento de crear una empresa
model Empresa {
  id                      Int                       @id @default(autoincrement())
  nombre                  String
  ruc                     String                    @unique
  clave_acceso            String                    @unique @default(cuid())
  logo                    String?
  direccion               String?
  telefono                String?
  email                   String                    @unique
  web                     String?
  EmpresaRolUsuario       EmpresaRolUsuario[]
  EmpresaCategoriaCalculo EmpresaCategoriaCalculo[]
  CategoriaCredito        CategoriaCredito[]
  EmpresaTipoPersona      EmpresaTipoPersona[]
  CategoriaInversion      CategoriaInversion[]
}

// Una empresa puede tener muchos roles y un rol pertenece a muchas empresas
model EmpresaRolUsuario {
  id        Int      @id @default(autoincrement())
  empresaId Int
  rolId     Int
  usuarioId Int?
  Empresa   Empresa  @relation(fields: [empresaId], references: [id])
  Rol       Rol      @relation(fields: [rolId], references: [id])
  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])
}

// Roles de usuario: Un rol puede tener mas de un usuario
model Rol {
  id                Int                 @id @default(autoincrement())
  nombre            String              @unique
  EmpresaRolUsuario EmpresaRolUsuario[]
}

// Datos del usuario
model Usuario {
  id                Int                 @id @default(autoincrement())
  nombre            String
  apellido          String
  cedula            String              @unique
  email             String              @unique
  password          String
  telefono          String
  EmpresaRolUsuario EmpresaRolUsuario[]
}

// Una empresa puede tener varias formas de calculo (Frances y/o Aleman)
// Un tipo de calculo (Frances y/o Aleman) puede perteneces a mas de 1 Empresa
model EmpresaCategoriaCalculo {
  id               Int              @id @default(autoincrement())
  empresaId        Int
  categoriaId      Int
  Empresa          Empresa          @relation(fields: [empresaId], references: [id])
  CategoriaCalculo CategoriaCalculo @relation(fields: [categoriaId], references: [id])
}

// Tipos de calculos (Frances, Aleman)
model CategoriaCalculo {
  id                      Int                       @id @default(autoincrement())
  nombre                  String                    @unique
  EmpresaCategoriaCalculo EmpresaCategoriaCalculo[]
}

// Tipos de creditos: Consumo, vivienda, etc.
// Cada Empresa maneja su categoria de creditos
model CategoriaCredito {
  id          Int     @id @default(autoincrement())
  nombre      String  @unique
  tasaInteres Int
  empresaId   Int
  Empresa     Empresa @relation(fields: [empresaId], references: [id])
}

// Una empresa puede tener muchos tipos de persona (Natural y/o Juridica)
// Cada tipo de persona puede estar asiciado a mas de una empresa
model EmpresaTipoPersona {
  id            Int         @id @default(autoincrement())
  empresaId     Int
  tipoPersonaId Int
  Empresa       Empresa     @relation(fields: [empresaId], references: [id])
  TipoPersona   TipoPersona @relation(fields: [tipoPersonaId], references: [id])
}

// Tipo de persona: Natural, Jurudica
model TipoPersona {
  id                 Int                  @id @default(autoincrement())
  nombre             String               @unique
  EmpresaTipoPersona EmpresaTipoPersona[]
}

// Una empresa maneja sus tipos de inversiones.
model CategoriaInversion {
  id          Int     @id @default(autoincrement())
  nombre      String
  tasaInteres Int
  EmpresaId   Int
  Empresa     Empresa @relation(fields: [EmpresaId], references: [id])
}
